name: Temperature_control

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_DIR: my-arduino-project
  PLATFORMIO_VERSION: "6.1.11"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout repository
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Setup Python environment
    - name: Set up Python
      uses: actions/setup-python@v4        # fine to stay on v4
      with:
        python-version: "3.9"
        cache: "pip"

    # Cache PlatformIO dependencies
    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: |
          ~/.platformio
          ~/.cache/pip
        key: ${{ runner.os }}-platformio-${{ env.PLATFORMIO_VERSION }}-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-platformio-${{ env.PLATFORMIO_VERSION }}-
          ${{ runner.os }}-platformio-

    # Install PlatformIO CLI
    - name: Install PlatformIO Core
      run: |
        python -m pip install --upgrade pip
        pip install platformio==${{ env.PLATFORMIO_VERSION }}

    # Setup project environment before firewall
    - name: Setup Environment (Pre-Firewall)
      run: |
        echo "Setting up ESP32-S3 Temperature Control environment..."
        sudo apt-get update
        sudo apt-get install -y \
          git wget curl build-essential python3-dev python3-pip \
          python3-setuptools python3-serial python3-click python3-cryptography \
          python3-future python3-pyparsing python3-pyelftools cmake ninja-build \
          ccache libffi-dev libssl-dev dfu-util libusb-1.0-0
        pip install --upgrade esptool pyserial click cryptography future \
          pyparsing pyelftools
        mkdir -p ~/.platformio
        cd ${{ env.PROJECT_DIR }}
        pio platform install espressif32@6.12.0

    # Install project dependencies
    - name: Install Dependencies
      working-directory: ${{ env.PROJECT_DIR }}
      run: |
        echo "Installing project dependencies..."
        pio pkg install
        pio pkg list

    # Compile the project
    - name: Build Firmware
      working-directory: ${{ env.PROJECT_DIR }}
      run: |
        echo "Building ESP32-S3 Temperature Control firmware..."
        pio run --verbose

    # Generate build artifacts
    - name: Prepare Build Artifacts
      working-directory: ${{ env.PROJECT_DIR }}
      run: |
        mkdir -p ../build-artifacts
        cp .pio/build/esp32-s3-devkitc-1/firmware.bin ../build-artifacts/
        cp .pio/build/esp32-s3-devkitc-1/firmware.elf ../build-artifacts/
        if [ -f .pio/build/esp32-s3-devkitc-1/partitions.bin ]; then
          cp .pio/build/esp32-s3-devkitc-1/partitions.bin ../build-artifacts/
        fi
        {
          echo "Build Date: $(date)"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"
        } > ../build-artifacts/build-info.txt
        pio run --target size > ../build-artifacts/memory-usage.txt 2>&1 || true

    # Upload build artifacts  (⬅️ bumped to v4)
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: esp32-s3-temperature-control-${{ github.sha }}
        path: build-artifacts/
        retention-days: 30

    # Run tests if they exist
    - name: Run Tests
      working-directory: ${{ env.PROJECT_DIR }}
      run: |
        if [ -d "test" ] && [ "$(ls -A]()

